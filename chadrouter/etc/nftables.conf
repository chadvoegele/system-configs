#!/usr/bin/nft -f

define internal_nic = enp1s0f1
define external_nic = ppp0
define chaddesk_ip = 192.168.10.97
define chadserver_ip = 192.168.10.95
define chadcam0_ip = 192.168.10.80

table inet filter {
  chain input {
    type filter hook input priority 0

    ip6 nexthdr icmpv6 icmpv6 type { echo-request, destination-unreachable, packet-too-big, time-exceeded, parameter-problem, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } limit rate 1/second accept
    ip protocol icmp icmp type { echo-request, destination-unreachable, router-advertisement, time-exceeded, parameter-problem } meter router-icmp { ip saddr limit rate 1/second } accept
    ip6 nexthdr icmpv6 drop
    ip protocol icmp drop

    ct state { established, related } accept

    ct state invalid drop

    iif { lo, $internal_nic } accept

    tcp dport ssh ct state new meter router-ssh { ip saddr limit rate 2/minute } accept

    reject with icmp type port-unreachable
  }

  chain forward {
    type filter hook forward priority 0

    oifname $external_nic ip saddr $chadcam0_ip drop

    oifname $external_nic tcp flags syn tcp option maxseg size set rt mtu

    iif { lo, $internal_nic } accept
    oif $internal_nic ct state { established, related } accept

    iifname $external_nic oif $internal_nic ip daddr $chaddesk_ip tcp dport ssh ct state new meter desk-ssh { ip saddr limit rate 2/minute } accept
    iifname $external_nic oif $internal_nic ip daddr $chadserver_ip tcp dport { http, https } ct state new meter server-web { ip saddr limit rate 200/minute } accept

    drop
  }

  chain output {
    type filter hook output priority 0
  }
}

table ip nat {
  chain prerouting {
    type nat hook prerouting priority 0
    iifname $external_nic tcp dport ssh dnat $chaddesk_ip
    iifname $external_nic tcp dport { http, https } dnat $chadserver_ip
  }

  chain postrouting {
    type nat hook postrouting priority 0
    oifname $external_nic ip saddr 192.168.10.0/24 masquerade
  }
}
